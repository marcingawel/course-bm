---
name: Manual Build & Test & Publish

on:
  workflow_dispatch:
    inputs:
      release_tag:
        description: |
          'Version to manually release'
        required: true
        type: string
  workflow_call:
    inputs:
      release_tag:
        description: |
          'Version to manually release'
        required: true
        type: string

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.sha }}
  cancel-in-progress: true

permissions:
  contents: write  # required to checkout the code from the repo and to perform release
  packages: write  # required to publish to packages
  pull-requests: write

env:
  TAG_RULES: |
    type=raw,value=latest
    type=sha
    type=sha,format=long
    type=semver,pattern={{version}},value=${{ inputs.release_tag }}

jobs:

  vars:
    runs-on: ubuntu-22.04
    outputs:
      tag_rules: ${{ env.TAG_RULES }}
    steps:
      - run: echo "Exposing env vars"

  flight-dotnet:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Build and Test Flight
        uses: ./.github/actions/build-test
        if: ${{ !cancelled() }}
        id: build-test-flight
        with:
          project-path: 'src/Services/Flight/src/Flight.Api'
          tests-path: 'src/Services/Flight/tests/'
          # wildcard search for files with the ".cobertura.xml" extension in all subdirectories of the current directory
          # https://www.jamescroft.co.uk/combining-multiple-code-coverage-results-in-azure-devops/
          # https://stackoverflow.com/questions/53255065/dotnet-unit-test-with-coverlet-how-to-get-coverage-for-entire-solution-and-not
          reports-path: ${{ github.workspace }}/**/*.cobertura.xml
          reports-output-path: ${{ github.workspace }}/output/test-results
          service-name: 'Flight'
          token: ${{ secrets.GITHUB_TOKEN }}
  
  flight-docker:
    permissions:
      contents: read
      packages: write # needed to push docker image to ghcr.io
      pull-requests: write
    uses: asmaestro/actions/.github/workflows/docker-build-push.yaml@solution-docker
    needs: [vars]
    with:
      name: Flight
      push: true
      file: 'src/Services/Flight/Dockerfile'
      context: .
      image-names: "ghcr.io/${{ github.repository }}-flight"
      tag-rules: ${{ needs.vars.outputs.tag_rules }}

  identity-dotnet:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Build and Test Identity
        uses: ./.github/actions/build-test
        if: ${{ !cancelled() }}
        id: build-test-identity
        with:
          project-path: 'src/Services/Identity/src/Identity.Api'
          tests-path: 'src/Services/Identity/tests/'
          # wildcard search for files with the ".cobertura.xml" extension in all subdirectories of the current directory
          # https://www.jamescroft.co.uk/combining-multiple-code-coverage-results-in-azure-devops/
          # https://stackoverflow.com/questions/53255065/dotnet-unit-test-with-coverlet-how-to-get-coverage-for-entire-solution-and-not
          reports-path: ${{ github.workspace }}/**/*.cobertura.xml
          reports-output-path: ${{ github.workspace }}/output/test-results
          service-name: 'Identity'
          token: ${{ secrets.GITHUB_TOKEN }}

  identity-docker:
    permissions:
      contents: read
      packages: write # needed to push docker image to ghcr.io
      pull-requests: write
    uses: asmaestro/actions/.github/workflows/docker-build-push.yaml@solution-docker
    needs: [vars]
    with:
      name: Identity
      push: true
      file: 'src/Services/Identity/Dockerfile'
      context: .
      image-names: "ghcr.io/${{ github.repository }}-identity"
      tag-rules: ${{ needs.vars.outputs.tag_rules }}

  passenger-dotnet:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Build and Test Passenger
        uses: ./.github/actions/build-test
        if: ${{ !cancelled() }}
        id: build-test-passenger
        with:
          project-path: 'src/Services/Passenger/src/Passenger.Api'
          tests-path: 'src/Services/Passenger/tests/'
          # wildcard search for files with the ".cobertura.xml" extension in all subdirectories of the current directory
          # https://www.jamescroft.co.uk/combining-multiple-code-coverage-results-in-azure-devops/
          # https://stackoverflow.com/questions/53255065/dotnet-unit-test-with-coverlet-how-to-get-coverage-for-entire-solution-and-not
          reports-path: ${{ github.workspace }}/**/*.cobertura.xml
          reports-output-path: ${{ github.workspace }}/output/test-results
          service-name: 'Passenger'
          token: ${{ secrets.GITHUB_TOKEN }}

  passenger-docker:
    permissions:
      contents: read
      packages: write # needed to push docker image to ghcr.io
      pull-requests: write
    uses: asmaestro/actions/.github/workflows/docker-build-push.yaml@solution-docker
    needs: [vars]
    with:
      name: Passenger
      push: true
      file: 'src/Services/Passenger/Dockerfile'
      context: .
      image-names: "ghcr.io/${{ github.repository }}-passenger"
      tag-rules: ${{ needs.vars.outputs.tag_rules }}

  booking-dotnet:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Build and Test Booking
        uses: ./.github/actions/build-test
        if: ${{ !cancelled() }}
        id: build-test-booking-step
        with:
          project-path: 'src/Services/Booking/src/Booking.Api'
          tests-path: 'src/Services/Booking/tests/'
          # wildcard search for files with the ".cobertura.xml" extension in all subdirectories of the current directory
          # https://www.jamescroft.co.uk/combining-multiple-code-coverage-results-in-azure-devops/
          # https://stackoverflow.com/questions/53255065/dotnet-unit-test-with-coverlet-how-to-get-coverage-for-entire-solution-and-not
          reports-path: ${{ github.workspace }}/**/*.cobertura.xml
          reports-output-path: ${{ github.workspace }}/output/test-results
          service-name: 'Booking'
          token: ${{ secrets.GITHUB_TOKEN }}

  booking-docker:
    permissions:
      contents: read
      packages: write # needed to push docker image to ghcr.io
      pull-requests: write
    uses: asmaestro/actions/.github/workflows/docker-build-push.yaml@solution-docker
    needs: [vars]
    with:
      name: Booking
      push: true
      file: 'src/Services/Booking/Dockerfile'
      context: .
      image-names: "ghcr.io/${{ github.repository }}-booking"
      tag-rules: ${{ needs.vars.outputs.tag_rules }}

  release-update:
    runs-on: ubuntu-latest
    if: success()
    needs: [flight-docker, identity-docker, passenger-docker, booking-docker]
    steps:
      - name: Release Update - ${{ inputs.release_tag }}
        uses: softprops/action-gh-release@v1
        env:
          REGISTRY: ghcr.io
        with:
          tag_name: "v${{ inputs.release_tag }}"
          append_body: true
          body: |
            - GitHub Packages Container URLs: 
              - ${{ env.REGISTRY }}/${{ github.repository }}-flight:${{ inputs.release_tag }}
              - ${{ env.REGISTRY }}/${{ github.repository }}-identity:${{ inputs.release_tag }}
              - ${{ env.REGISTRY }}/${{ github.repository }}-passenger:${{ inputs.release_tag }}
              - ${{ env.REGISTRY }}/${{ github.repository }}-booking:${{ inputs.release_tag }}
          token: ${{ secrets.GITHUB_TOKEN }}